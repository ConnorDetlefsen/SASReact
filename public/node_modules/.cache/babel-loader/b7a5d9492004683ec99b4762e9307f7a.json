{"ast":null,"code":"var _jsxFileName = \"/Users/connordetlefsen/Downloads/SAS-master/sas_project_freelancer/src/Pages/BuyData.jsx\";\nimport React, { Component } from \"react\";\nimport Sidebar from \"../Components/Sidebar\";\nimport NavBar from \"../Components/NavBar\";\nimport DataPack from \"../Components/DataPack\";\nimport UserContext from \"../Context/UserContext\";\nimport http from \"../APIServices/httpService\";\nimport config from \"../APIServices/config.json\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\n\nclass BuyData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cost: 0,\n      data: [//we will read in this for each team.  have one table for datapacks, one for unique links? or one table with both\n      {\n        id: 1,\n        name: \"Test data pack using state\",\n        value: 500,\n        description: \"state test read this in from database\"\n      }, {\n        id: 2,\n        name: \"test 2 data pack \",\n        value: 700,\n        description: \"state test 2\"\n      }]\n    };\n\n    this.handleClick = e => {\n      //this.state.cost = e.target.value;\n      console.log(this.state.cost);\n    };\n  }\n\n  async componentDidMount() {\n    console.log(\"page started\");\n    http.get(config.apiEndpoint + \"/tickets/\" + this.context.currentUser.teamID).then(res => {\n      console.log(res.data);\n      this.setState({\n        teamTickets: res.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      id: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      activePage: \"buydata\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      id: \"page-content-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      pagename: \"Buy Data\",\n      budget: this.context.currentUser.budget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      px: 5,\n      py: 4,\n      className: \"bg-white box-shadow rounded\",\n      minHeight: \"calc(100vh - 140px)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      p: 1,\n      textAlign: \"center\",\n      fontWeight: \"fontWeightBold\",\n      className: \"bg-blue box-shadow rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, \"Buy Data\"))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, this.state.data.map(data => /*#__PURE__*/React.createElement(\"div\", {\n      class: \"containerBuyData\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      key: data.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(DataPack, {\n      name: data.name,\n      value: data.value,\n      description: data.description,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }))))))))));\n  }\n\n}\n\nBuyData.contextType = UserContext;\nexport default BuyData;","map":{"version":3,"sources":["/Users/connordetlefsen/Downloads/SAS-master/sas_project_freelancer/src/Pages/BuyData.jsx"],"names":["React","Component","Sidebar","NavBar","DataPack","UserContext","http","config","Box","Container","Grid","BuyData","state","cost","data","id","name","value","description","handleClick","e","console","log","componentDidMount","get","apiEndpoint","context","currentUser","teamID","then","res","setState","teamTickets","render","budget","map","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Sidebar from \"../Components/Sidebar\";\nimport NavBar from \"../Components/NavBar\";\nimport DataPack from \"../Components/DataPack\";\n\nimport UserContext from \"../Context/UserContext\";\nimport http from \"../APIServices/httpService\";\nimport config from \"../APIServices/config.json\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\n\nclass BuyData extends Component {\n  static contextType = UserContext;\n\n  state = {\n    cost: 0,\n    data: [\n      //we will read in this for each team.  have one table for datapacks, one for unique links? or one table with both\n      {\n        id: 1,\n        name: \"Test data pack using state\",\n        value: 500,\n        description: \"state test read this in from database\",\n      },\n      {\n        id: 2,\n        name: \"test 2 data pack \",\n        value: 700,\n        description: \"state test 2\",\n      },\n    ],\n  };\n\n  async componentDidMount() {\n    console.log(\"page started\");\n    http\n      .get(config.apiEndpoint + \"/tickets/\" + this.context.currentUser.teamID)\n      .then((res) => {\n        console.log(res.data);\n        this.setState({ teamTickets: res.data });\n      });\n  }\n\n  handleClick = (e) => {\n    //this.state.cost = e.target.value;\n    console.log(this.state.cost);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Box display=\"flex\" id=\"wrapper\">\n          <Sidebar activePage=\"buydata\" />\n          <Container id=\"page-content-wrapper\">\n            <NavBar\n              pagename=\"Buy Data\"\n              budget={this.context.currentUser.budget}\n            />\n            <Box\n              px={5}\n              py={4}\n              className=\"bg-white box-shadow rounded\"\n              minHeight={\"calc(100vh - 140px)\"}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Box\n                    p={1}\n                    textAlign=\"center\"\n                    fontWeight=\"fontWeightBold\"\n                    className=\"bg-blue box-shadow rounded\"\n                  >\n                    Buy Data\n                  </Box>\n                </Grid>\n              </Grid>\n              <div class=\"row\">\n                <div class=\"column\">\n                  {this.state.data.map((data) => (\n                    <div class=\"containerBuyData\">\n                      <tr key={data.id}>\n                        <DataPack\n                          name={data.name}\n                          value={data.value}\n                          description={data.description}\n                          onClick={this.handleClick}\n                        ></DataPack>\n                        <br></br>\n                      </tr>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </Box>\n          </Container>\n        </Box>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BuyData;\n"]},"metadata":{},"sourceType":"module"}