{"ast":null,"code":"var _jsxFileName = \"/Users/connordetlefsen/Downloads/SAS-master/sas_project_freelancer/src/Pages/BuyData.jsx\";\nimport React, { Component } from \"react\";\nimport Sidebar from \"../Components/Sidebar\";\nimport NavBar from \"../Components/NavBar\";\nimport DataPack from \"../Components/DataPack\";\nimport UserContext from \"../Context/UserContext\";\n\nclass BuyData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cost: 0,\n      data: [//we will read in this for each team.  have one table for datapacks, one for unique links? or one table with both\n      {\n        id: 1,\n        name: \"Test data pack using state\",\n        value: 500,\n        description: \"state test read this in from database\"\n      }, {\n        id: 2,\n        name: \"test 2 data pack \",\n        value: 700,\n        description: \"state test 2\"\n      }]\n    };\n\n    this.handleClick = e => {\n      //this.state.cost = e.target.value;\n      console.log(this.state.cost);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex\",\n      id: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      activePage: \"buydata\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"page-content-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      pagename: \"Buy Data\",\n      budget: this.context.currentUser.budget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, this.state.data.map(data => /*#__PURE__*/React.createElement(\"tr\", {\n      key: data.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DataPack, {\n      name: data.name,\n      value: data.value,\n      description: data.description,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"cardData\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"Competitor Data One: $10000\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, \"Graphs displaying the amount of inventory purchased by each team, data displaying the comparison of latitude and longitude per each location\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\" // onClick={this.handleClick}\n      ,\n      class: \"btn btn-primary\",\n      value: \"10000\",\n      name: \"data10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"Purchase\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"cardData\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, \"Customer Age Data: $4000\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, \"We collected age information of 2000 customers close to your store.\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\" //onClick={this.handleClick}\n      ,\n      class: \"btn btn-primary\",\n      value: \"4000\",\n      name: \"data7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, \"Purchase\"))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"cardData\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, \"Basic Population Survey: $3000\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, \"This survey is a rough estimate of the population, or number of potential customers, in the area.\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\" //onClick={this.handleClick}\n      ,\n      class: \"btn btn-primary\",\n      value: \"3000\",\n      name: \"basicPop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, \"Purchase\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"cardData\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, \"Detailed Population Survey: $7000\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, \"This survey is a more specific estimate of the population, or number of potential customers, in the area.\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\" // onClick={this.handleClick}\n      ,\n      class: \"btn btn-primary\",\n      value: \"7000\",\n      name: \"detailedPop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, \"Purchase\")))))));\n  }\n\n}\n\nBuyData.contextType = UserContext;\nexport default BuyData;","map":{"version":3,"sources":["/Users/connordetlefsen/Downloads/SAS-master/sas_project_freelancer/src/Pages/BuyData.jsx"],"names":["React","Component","Sidebar","NavBar","DataPack","UserContext","BuyData","state","cost","data","id","name","value","description","handleClick","e","console","log","render","context","currentUser","budget","map","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Sidebar from \"../Components/Sidebar\";\nimport NavBar from \"../Components/NavBar\";\nimport DataPack from \"../Components/DataPack\";\n\nimport UserContext from \"../Context/UserContext\";\n\nclass BuyData extends Component {\n  static contextType = UserContext;\n\n  state = {\n    cost: 0,\n    data: [\n      //we will read in this for each team.  have one table for datapacks, one for unique links? or one table with both\n      {\n        id: 1,\n        name: \"Test data pack using state\",\n        value: 500,\n        description: \"state test read this in from database\",\n      },\n      {\n        id: 2,\n        name: \"test 2 data pack \",\n        value: 700,\n        description: \"state test 2\",\n      },\n    ],\n  };\n\n  handleClick = (e) => {\n    //this.state.cost = e.target.value;\n    console.log(this.state.cost);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div class=\"d-flex\" id=\"wrapper\">\n          <Sidebar activePage=\"buydata\" />\n          <div id=\"page-content-wrapper\">\n            <NavBar\n              pagename=\"Buy Data\"\n              budget={this.context.currentUser.budget}\n            />\n            <br />\n            <div class=\"row\">\n              <div class=\"column\">\n                {this.state.data.map((data) => (\n                  <tr key={data.id}>\n                    <DataPack\n                      name={data.name}\n                      value={data.value}\n                      description={data.description}\n                      onClick={this.handleClick}\n                    ></DataPack>\n                    <br></br>\n                  </tr>\n                ))}\n              </div>\n              <div class=\"column\">\n                <div class=\"cardData\">\n                  <h5>Competitor Data One: $10000</h5>\n                  <p>\n                    Graphs displaying the amount of inventory purchased by each\n                    team, data displaying the comparison of latitude and\n                    longitude per each location\n                  </p>\n                  <button\n                    type=\"button\"\n                    // onClick={this.handleClick}\n                    class=\"btn btn-primary\"\n                    value=\"10000\"\n                    name=\"data10\"\n                  >\n                    Purchase\n                  </button>\n                </div>\n                <br></br>\n\n                <div class=\"cardData\">\n                  <h5>Customer Age Data: $4000</h5>\n                  <p>\n                    We collected age information of 2000 customers close to your\n                    store.\n                  </p>\n                  <button\n                    type=\"button\"\n                    //onClick={this.handleClick}\n                    class=\"btn btn-primary\"\n                    value=\"4000\"\n                    name=\"data7\"\n                  >\n                    Purchase\n                  </button>\n                </div>\n              </div>\n              <div class=\"column\">\n                <div class=\"cardData\">\n                  <h5>Basic Population Survey: $3000</h5>\n                  <p>\n                    This survey is a rough estimate of the population, or number\n                    of potential customers, in the area.\n                  </p>\n                  <button\n                    type=\"button\"\n                    //onClick={this.handleClick}\n                    class=\"btn btn-primary\"\n                    value=\"3000\"\n                    name=\"basicPop\"\n                  >\n                    Purchase\n                  </button>\n                </div>\n                <br></br>\n                <div class=\"cardData\">\n                  <h5>Detailed Population Survey: $7000</h5>\n                  <p>\n                    This survey is a more specific estimate of the population,\n                    or number of potential customers, in the area.\n                  </p>\n\n                  <button\n                    type=\"button\"\n                    // onClick={this.handleClick}\n                    class=\"btn btn-primary\"\n                    value=\"7000\"\n                    name=\"detailedPop\"\n                  >\n                    Purchase\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BuyData;\n"]},"metadata":{},"sourceType":"module"}